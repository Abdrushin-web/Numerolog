@page "/"
@inject Alphabet Alphabet
@inject NavigationManager Navigation

<PageTitle>@Title</PageTitle>

<div class="d-flex d-print-none">
    <h1>Numerolog - duchovní číslověda</h1>
    <span class="ms-auto text-end">
        <a href="https://github.com/Abdrushin-web/Numerolog" target="_blank">Verze: @Application.Version</a><br/>
        <span title="Numerologie německého jazyka duchovně přijatá Lucienem Siffridem a Hermannem Wenngem z kruhu Pána Abdrushina">Německá abeceda</span>
    </span>
</div>

@{
    var computing = Computing;
    var cancellation = this.cancellation?.Token ?? default;
}

<div class="d-flex flex-column d-print-none">
    <label>
        Název:
        <InputText class="w-100"
                   title="Zadejte volitelný název textu"
                   Value=@name
                   ValueExpression="() => name"
                   @oninput="OnNameChanged" />
    </label>
    <label>
        Text:
        <InputTextArea class="focused w-100"
                       title="Zadejte německý text"
                       Value="@text"
                       ValueExpression="() => text"
                       @oninput="OnTextChanged" />
    </label>
    @if (computing) {
        <div class="d-flex justify-content-center mt-5">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Počítám ...</span>
            </div>
        </div>
    } else if (result != null) {
        <div class="ms-auto d-flex">
            @if (result?.LevelCount > 2) {
                if (showDetails) {
                    <button class="btn"
                            @onclick="ToggleShowDetails">
                        <span class="oi oi-chevron-top"
                              title="Skrýt podrobnosti"
                              aria-hidden="true" />
                    </button>
                } else {
                    <button class="btn"
                            @onclick="ToggleShowDetails">
                        <span class="oi oi-chevron-bottom"
                              title="Zobrazit podrobnosti"
                              aria-hidden="true" />
                    </button>
                }
            }
            <button class="btn"
                    onclick="window.print()">
                <span class="oi oi-print"
                      title="Vytisknout"
                      aria-hidden="true"/>
            </button>
        </div>
    }
</div>

@if (result is null ||
    computing) {
    return;
}

@if (HasName) {
    <h1 class="d-none d-print-block">@name</h1>
}

<table class="table table-sm table-hover">
    <thead>
        @Render(
            true,
            "Text",
            "<span title='Trojčíslí spočítané podle číselné abecedy skládající se z cifer jemné, střední a hrubé úrovně'>Trojčíslí</span>",
            "<span title='Jednociferný součet cifer trojčíslí'>Číslo</span>")
        @Render(true, result)
    </thead>
    <tbody>
        @if (result.HasSource) {
            foreach (var source in result.Source) {
                if (cancellation.IsCancellationRequested)
                    break;
                @Render(false, source, 1, cancellation)
            }
        }
    </tbody>
</table>

@code {
    RenderFragment Render(bool header, TextNumber result, byte level = 0, CancellationToken cancellation = default) => __builder =>
    {
        var text = result.GetText(null, UnknownLetter, cancellation);
        if (cancellation.IsCancellationRequested)
            return;
        text = text.WithHtmlLines();
        if (cancellation.IsCancellationRequested)
            return;
        var number = result.Number?.GetValueText(null, UnknownLetter);
        if (cancellation.IsCancellationRequested)
            return;
        @Render(
            header,
            text,
            number,
            result.Number?.SingleDigitSumText,
            level)
        if (!header &&
            showDetails &&
            result.HasSource) {
            foreach (var item in result.Source) {
                if (cancellation.IsCancellationRequested)
                    break;
                @Render(false, item, (byte)(level + 1))
            }
        }
    };

    string? UnknownLetter(string? text) => $"<span class=\"opacity-50\">{text}</span>";

    RenderFragment Render(bool header, string? text, string? number, string? digit, byte level = 0) => __builder =>
    {
        for (int i = 0; i < level; i++) {
            text = "<span class='ms-5'/>" + text;
        }
        <tr>
            @if (header) {
                <th>@((MarkupString)text!)</th>
                <th class="text-end align-top">@((MarkupString)number!)</th>
                <th class="text-end align-top">@((MarkupString)digit!)</th>
            }
            else {
                <td>@((MarkupString)text!)</td>
                <td class="text-end">@((MarkupString)number!)</td>
                <td class="text-end">@((MarkupString)digit!)</td>
            }
        </tr>
    };
}